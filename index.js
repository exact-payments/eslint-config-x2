/* eslint-disable max-len */


const config = {
  plugins: [
    'node',
    'unicorn',
    'new-with-error',
    'no-use-extend-native',
  ],

  parserOptions: {
    ecmaVersion: 6,
  },

  env: {
    node: true,
  },

  rules: {

    // Possible Errors
    'no-await-in-loop'           : 'warn',
    'no-cond-assign'             : ['error', 'except-parens'],
    'no-console'                 : ['warn', { allow: ['warn', 'error'] }],
    'no-constant-condition'      : ['error', { checkLoops: false }],
    'no-control-regex'           : 'off',
    'no-debugger'                : 'error',
    'no-dupe-args'               : 'error',
    'no-dupe-keys'               : 'error',
    'no-duplicate-case'          : 'error',
    'no-empty-character-class'   : 'error',
    'no-empty'                   : ['error', { allowEmptyCatch: true }],
    'no-ex-assign'               : 'error',
    'no-extra-boolean-cast'      : 'error',
    'no-extra-parens'            : ['warn', 'functions'],
    'no-extra-semi'              : 'error',
    'no-func-assign'             : 'error',
    'no-inner-declarations'      : ['error', 'both'],
    'no-invalid-regexp'          : ['error', { allowConstructorFlags: ['u', 'y'] }],
    'no-irregular-whitespace'    : ['error', { skipStrings: true, skipTemplates: true }],
    'no-obj-calls'               : 'error',
    'no-prototype-builtins'      : 'off',
    'no-regex-spaces'            : 'off',
    'no-sparse-arrays'           : 'warn',
    'no-template-curly-in-string': 'off',
    'no-unexpected-multiline'    : 'error',
    'no-unreachable'             : 'error',
    'no-unsafe-finally'          : 'error',
    'no-unsafe-negation'         : 'error',
    'use-isnan'                  : 'error',
    'valid-jsdoc'                : 'off',
    'valid-typeof'               : ['error', { requireStringLiterals: false }],

    // Best Practices
    'accessor-pairs'              : 'off',
    'array-callback-return'       : 'off',
    'block-scoped-var'            : 'error',
    'class-methods-use-this'      : 'off',
    complexity                    : 'off',
    'consistent-return'           : 'off',
    curly                         : ['error', 'all'],
    'default-case'                : 'error',
    'dot-location'                : 'off',      // TODO: Verify this does what we want it to
    'dot-notation'                : 'error',
    eqeqeq                        : 'warn',
    'guard-for-in'                : 'off',
    'no-alert'                    : 'warn',
    'no-caller'                   : 'error',
    'no-case-declarations'        : 'off',   // TODO: Enable later
    'no-div-regex'                : 'error',
    'no-else-return'              : 'error',
    'no-empty-function'           : ['error', { allow: ['arrowFunctions'] }],
    'no-empty-pattern'            : 'error',
    'no-eq-null'                  : 'error',
    'no-eval'                     : 'error',
    'no-extend-native'            : 'error',
    'no-extra-bind'               : 'error',
    'no-extra-label'              : 'warn',
    'no-fallthrough'              : 'error',
    'no-floating-decimal'         : 'error',
    'no-global-assign'            : 'error',
    'no-implicit-coercion'        : 'off',
    'no-implicit-globals'         : 'off',
    'no-implied-eval'             : 'error',
    'no-invalid-this'             : 'error',
    'no-iterator'                 : 'error',
    'no-labels'                   : 'off',
    'no-lone-blocks'              : 'error',
    'no-loop-func'                : 'error',
    'no-magic-numbers'            : 'off',
    'no-multi-spaces'             : 'off',
    'no-multi-str'                : 'error',
    'no-new-func'                 : 'off',
    'no-new-wrappers'             : 'off',
    'no-new'                      : 'warn',
    'no-octal-escape'             : 'error',
    'no-octal'                    : 'error',
    'no-param-reassign'           : 'off',
    'no-proto'                    : 'off',
    'no-redeclare'                : ['error', { builtinGlobals: true }],
    'no-restricted-properties'    : 'off',
    'no-return-assign'            : ['error', 'except-parens'],
    'no-return-await'             : 'error',
    'no-script-url'               : 'error',
    'no-self-assign'              : 'error',
    'no-self-compare'             : 'error',
    'no-sequences'                : 'error',
    'no-throw-literal'            : 'error',
    'no-unmodified-loop-condition': 'off',
    'no-unused-expressions'       : ['error', { allowShortCircuit: true, allowTernary: true }],
    'no-unused-labels'            : 'warn',
    'no-useless-call'             : 'error',
    'no-useless-concat'           : 'error',
    'no-useless-escape'           : 'error',
    'no-useless-return'           : 'error',
    'no-void'                     : 'error',
    'no-warning-comments'         : 'off',
    'no-with'                     : 'error',
    radix                         : 'warn',
    'require-await'               : 'error',
    'vars-on-top'                 : 'off',
    'wrap-iife'                   : ['error', 'outside', { functionPrototypeMethods: true }],
    yoda                          : ['error', 'never'],

    // Strict
    strict: ['error', 'never'],

    // Variables
    'init-declarations'         : 'off',
    'no-catch-shadow'           : 'off',
    'no-delete-var'             : 'error',
    'no-label-var'              : 'off',
    'no-restricted-globals'     : 'off',
    'no-shadow-restricted-names': 'warn',
    'no-shadow'                 : 'off',
    'no-undef-init'             : 'warn',
    'no-undef'                  : ['error', { typeof: true }],
    'no-undefined'              : 'off',
    'no-unused-vars'            : 'error',
    'no-use-before-define'      : ['error', 'nofunc'],

    // Node.js and CommonJS
    'callback-return'      : 'off',
    'global-require'       : 'error',
    'handle-callback-err'  : 'off',
    'no-mixed-requires'    : 'off',
    'no-new-require'       : 'error',
    'no-path-concat'       : 'error',
    'no-process-env'       : 'off',
    'no-process-exit'      : 'off',
    'no-restricted-modules': 'off',
    'no-sync'              : 'off',

    // Stylistic Issues
    'array-bracket-spacing'        : ['error', 'never'],
    'block-spacing'                : ['error', 'always'],
    'brace-style'                  : ['error', '1tbs', { allowSingleLine: true }],
    camelcase                      : 'error',
    'capitalized-comments'         : ['warn', 'always', { ignoreConsecutiveComments: true }],
    'comma-dangle'                 : ['error', 'always-multiline'],
    'comma-spacing'                : ['error', { before: false, after: true }],
    'comma-style'                  : ['error', 'last'],
    'computed-property-spacing'    : ['error', 'never'],
    'consistent-this'              : 'off',
    'eol-last'                     : 'error',
    'func-call-spacing'            : ['error', 'never'],
    'func-name-matching'           : 'off',
    'func-names'                   : ['error', 'never'],
    'func-style'                   : 'off',
    'id-blacklist'                 : 'off',
    'id-length'                    : 'off',
    'id-match'                     : 'off',
    indent                         : ['error', 2, { SwitchCase: 0, VariableDeclarator: 1, outerIIFEBody: 1, MemberExpression: 1, FunctionDeclaration: { parameters: 1, body: 1 }, FunctionExpression: { parameters: 1, body: 1 }, CallExpression: { arguments: 1 }, ArrayExpression: 1, ObjectExpression: 1 }],
    'jsx-quotes'                   : 'off',
    'key-spacing'                  : ['error', { singleLine: { beforeColon: false, afterColon: true, mode: 'strict' }, multiLine: { beforeColon: false, afterColon: true, mode: 'minimum', align: 'colon' } }],
    'keyword-spacing'              : ['error', { before: true, after: true }],
    'line-comment-position'        : 'off',
    'linebreak-style'              : ['error', 'unix'],
    'lines-around-comment'         : 'off',
    'lines-around-directive'       : 'off',
    'max-depth'                    : ['warn', 6],
    'max-len'                      : ['warn', { code: 100, tabWidth: 2, comments: 80, ignoreUrls: true }],
    'max-lines'                    : 'off',
    'max-nested-callbacks'         : ['warn', 10],
    'max-params'                   : ['warn', 6],
    'max-statements-per-line'      : ['warn', { max: 2 }],
    'max-statements'               : 'off',
    'multiline-ternary'            : 'off',
    'new-cap'                      : ['error', { newIsCap: true, capIsNew: true, newIsCapExceptions: ['this'], capIsNewExceptions: ['this'] }],
    'new-parens'                   : 'error',
    'newline-after-var'            : 'off',
    'newline-before-return'        : 'off',
    'newline-per-chained-call'     : ['error', { ignoreChainWithDepth: 3 }],
    'no-array-constructor'         : 'off',
    'no-bitwise'                   : 'off',
    'no-continue'                  : 'off',
    'no-inline-comments'           : 'off',
    'no-lonely-if'                 : 'warn',
    'no-mixed-operators'           : 'error',
    'no-mixed-spaces-and-tabs'     : 'error',
    'no-multiple-empty-lines'      : ['warn', { max: 2, maxEOF: 1, maxBOF: 2 }],
    'no-negated-condition'         : 'error',
    'no-nested-ternary'            : 'error',
    'no-new-object'                : 'error',
    'no-plusplus'                  : 'error',
    'no-restricted-syntax'         : ['error', 'WithStatement'],
    'no-tabs'                      : 'warn',
    'no-ternary'                   : 'off',
    'no-trailing-spaces'           : 'warn',
    'no-underscore-dangle'         : 'off',
    'no-unneeded-ternary'          : 'error',
    'no-whitespace-before-property': 'error',
    'object-curly-newline'         : 'off',
    'object-curly-spacing'         : ['error', 'always', { arraysInObjects: true, objectsInObjects: true }],
    'object-property-newline'      : ['error', { allowMultiplePropertiesPerLine: true }],
    'one-var-declaration-per-line' : ['error', 'initializations'],
    'one-var'                      : ['error', { initialized: 'never' }],
    'operator-assignment'          : ['error', 'always'],
    'operator-linebreak'           : ['error', 'after'],
    'padded-blocks'                : 'off',
    'quote-props'                  : ['error', 'as-needed'],
    quotes                         : ['error', 'single'],
    'require-jsdoc'                : 'off',
    'semi-spacing'                 : 'error',
    semi                           : 'error',
    'sort-keys'                    : 'off',
    'sort-vars'                    : 'off',
    'space-before-blocks'          : ['error', 'always'],
    'space-before-function-paren'  : ['error', { anonymous: 'never', named: 'never', asyncArrow: 'always' }],
    'space-in-parens'              : ['error', 'never'],
    'space-infix-ops'              : ['error', { int32Hint: true }],
    'space-unary-ops'              : ['error', { words: true, nonwords: false }],
    'spaced-comment'               : ['error', 'always', { exceptions: ['*', '-', '=', '#'] }],
    'unicode-bom'                  : 'off',
    'wrap-regex'                   : 'off',

    // ECMAScript 6
    'arrow-body-style'       : ['error', 'as-needed'],
    'arrow-parens'           : ['error', 'as-needed', { requireForBlockBody: true }],
    'arrow-spacing'          : ['error', { before: true, after: true }],
    'constructor-super'      : 'error',
    'generator-star-spacing' : ['error', 'after'],
    'no-class-assign'        : 'off',
    'no-confusing-arrow'     : 'off',
    'no-const-assign'        : 'error',
    'no-dupe-class-members'  : 'error',
    'no-duplicate-imports'   : ['error', { includeExports: true }],
    'no-new-symbol'          : 'off',
    'no-restricted-imports'  : 'off',
    'no-this-before-super'   : 'error',
    'no-useless-computed-key': 'error',
    'no-useless-constructor' : 'error',
    'no-useless-rename'      : 'error',
    'no-var'                 : 'error',
    'object-shorthand'       : ['error', 'always'],
    'prefer-arrow-callback'  : ['error', { allowNamedFunctions: false }],
    'prefer-const'           : 'error',
    'prefer-numeric-literals': 'error',
    'prefer-rest-params'     : 'error',
    'prefer-spread'          : 'error',
    'prefer-template'        : 'error',
    'require-yield'          : 'error',
    'rest-spread-spacing'    : ['error', 'never'],
    'sort-imports'           : 'off',
    'symbol-description'     : 'error',
    'template-curly-spacing' : 'error',
    'yield-star-spacing'     : ['error', 'after'],

    // Node Plugin
    'node/exports-style'          : 'off',
    'node/no-deprecated-api'      : 'warn',
    'node/no-missing-import'      : 'error',
    'node/no-missing-require'     : 'error',
    'node/no-unpublished-bin'     : 'error',
    'node/no-unpublished-import'  : 'error',
    'node/no-unpublished-require' : 'error',
    'node/no-unsupported-features': 'off',
    'node/process-exit-as-throw'  : 'error',
    'node/shebang'                : 'error',

    // Unicorn Plugin
    'unicorn/catch-error-name'         : ['error', { name: 'err' }],
    'unicorn/explicit-length-check'    : 'error',
    'unicorn/filename-case'            : ['error', { case: 'kebabCase' }],
    'unicorn/no-abusive-eslint-disable': 'error',
    'unicorn/no-process-exit'          : 'off',
    'unicorn/throw-new-error'          : 'error',
    // 'unicorn/number-literal-case'      : 'error', // FIXME: Not yet released
    // 'unicorn/escape-case'              : 'error', // FIXME: Not yet released
    // 'unicorn/no-array-instanceof'      : 'error', // FIXME: Not yet released
    // 'unicorn/no-new-buffer'            : 'error', // FIXME: Not yet released
    'unicorn/no-hex-escape'            : 'off',
    // 'unicorn/custom-error-definition'  : 'error', // FIXME: Not yet released

    // No Use Extend Native Plugin
    'no-use-extend-native/no-use-extend-native': 'error',
  },
};


module.exports = config;
